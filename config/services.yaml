# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  roles_not_allowed_to_delete: '%env(ROLE_CODES_NOT_ALLOWED_DELETE)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Add your UnoResolver service definition here
    imagine.cache.resolver.uno_resolver:
        class: App\Service\UnoResolver
        arguments:
            $filesystem: '@filesystem'
            $router: '@router'
            $cacheRoot: '%kernel.project_dir%/uno_uploads' # Adjust this if your cache root is different
            $cachePrefix: 'cache' # This acts similarly to cache_prefix
        tags:
            - { name: 'liip_imagine.cache.resolver', resolver: 'uno_resolver' }

    App\EventListener\ApiRequestListener:
        arguments:
            $appKeyPath: '%kernel.project_dir%/%env(APP_KEY_DIR)%/.dh_app_key'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 100 }

    App\Command\GenerateAppKeyCommand:
        arguments:
            $appKeyDir: '%env(APP_KEY_DIR)%'
        tags:
            - { name: 'console.command' }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
